import os
from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.constants import ParseMode
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters

BOT_TOKEN = os.getenv("BOT_TOKEN")
URL_WRITER = os.getenv("CHANNEL_URL_WRITER")
URL_EDITOR = os.getenv("CHANNEL_URL_EDITOR")

GREETING = (
    "–î–æ–±—Ä—ã–π –¥–µ–Ω—å! –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –æ—Ç–∫–ª–∏–∫–Ω—É–ª–∏—Å—å.\n"
    "–í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –≤–∞–∫–∞–Ω—Å–∏—è —Å—Ü–µ–Ω–∞—Ä–∏—Å—Ç–∞ –∏–ª–∏ –º–æ–Ω—Ç–∞–∂–µ—Ä–∞?"
)

def main_keyboard() -> InlineKeyboardMarkup:
    buttons = [
        [InlineKeyboardButton("üìñ –í–∞–∫–∞–Ω—Å–∏—è —Å—Ü–µ–Ω–∞—Ä–∏—Å—Ç–∞", url=URL_WRITER)],
        [InlineKeyboardButton("üé¨ –í–∞–∫–∞–Ω—Å–∏—è –º–æ–Ω—Ç–∞–∂–µ—Ä–∞", url=URL_EDITOR)],
    ]
    return InlineKeyboardMarkup(buttons)

async def send_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.effective_chat.send_message(
        GREETING,
        reply_markup=main_keyboard(),
        disable_web_page_preview=True,
        parse_mode=ParseMode.HTML,
    )

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await send_menu(update, context)

async def any_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –ù–∞ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é –µ—â—ë —Ä–∞–∑
    await send_menu(update, context)

def main():
    if not BOT_TOKEN or not URL_WRITER or not URL_EDITOR:
        raise RuntimeError("–£–∫–∞–∂–∏—Ç–µ BOT_TOKEN, CHANNEL_URL_WRITER –∏ CHANNEL_URL_EDITOR –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
    app = ApplicationBuilder().token(BOT_TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("menu", start))     # –¥–æ–ø. –∫–æ–º–∞–Ω–¥–∞ –Ω–∞ –≤—Å—è–∫–∏–π
    app.add_handler(MessageHandler(filters.ALL, any_message))

    app.run_polling(allowed_updates=Update.ALL_TYPES)

if __name__ == "__main__":
    main()
